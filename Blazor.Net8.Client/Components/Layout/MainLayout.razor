@inherits LayoutComponentBase

@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@implements IAsyncDisposable

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

@code{
    private HubConnection? hubConnection;
    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string>("GoToLogin",async(connectionId) =>
        {
            await hubConnection.SendAsync("Logout",connectionId);
            await InvokeAsync(StateHasChanged);
        });

        hubConnection.On<string>("GoToLogout", async(connectionId) =>
        {
            Navigation.NavigateTo("/");
            Snackbar.Add($"Another login is founded.", Severity.Warning);
            await InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    public bool IsConnected =>
        hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}